{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-16T04:19:26.878Z",
    "end": "2022-10-16T04:19:44.653Z",
    "duration": 17775,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "df939d88-1f96-4c84-8abd-a063d97a124a",
      "title": "",
      "fullFile": "C:\\Test QA\\api-automation-testing-using-mocha-chai-javascript\\automation-api-login.js",
      "file": "\\automation-api-login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
          "title": "POST /LOGIN",
          "fullFile": "C:\\Test QA\\api-automation-testing-using-mocha-chai-javascript\\automation-api-login.js",
          "file": "\\automation-api-login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Success Login with valid email and password",
              "fullTitle": "POST /LOGIN Verify Success Login with valid email and password",
              "timedOut": false,
              "duration": 1141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESKRIPSI\n    const response = await request_url // INI BUAT NGARAH KE URL BARRU.PYTHONANYWHERE.COM\n      .post(\"/login\") // INI ENDPOINT SETELAH .COM\n      .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" }); // INI SESUAI BODY\n    const isi_data = response.body;\n    assert(response.body.status).to.eql('SUCCESS_LOGIN');\n    assert(response.body.message).to.eql('Anda Berhasil Login');\n    assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "a245dc17-d441-4a50-a0e6-a1675a7974ce",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with invalid email and valid password",
              "fullTitle": "POST /LOGIN Verify Failed Login with invalid email and valid password",
              "timedOut": false,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "f3f62918-965a-437a-adee-bb9c5bc824c5",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with random email and valid password",
              "fullTitle": "POST /LOGIN Verify Failed Login with random email and valid password",
              "timedOut": false,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqi.asdajsdasdasd@bkabka.com\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "9d7e9327-d718-4ded-8cc2-15bc34dc08b8",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with phone number and valid password",
              "fullTitle": "POST /LOGIN Verify Failed Login with phone number and valid password",
              "timedOut": false,
              "duration": 1778,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"088823772363\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "94e90cb8-6ba0-4d50-b680-8370a09f1fb5",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with username and valid password",
              "fullTitle": "POST /LOGIN Verify Failed Login with username and valid password",
              "timedOut": false,
              "duration": 622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqiadiatma\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "b4b741f4-2f27-4bfa-b145-5394abba5ec6",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with empty email and valid password",
              "fullTitle": "POST /LOGIN Verify Failed Login with empty email and valid password",
              "timedOut": false,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "a6cf10ac-865f-41ff-b060-4f9971b280b2",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with empty Body Only Dictionary",
              "fullTitle": "POST /LOGIN Verify Failed Login with empty Body Only Dictionary",
              "timedOut": false,
              "duration": 863,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ });\n  assert(response.status).to.eql(500);",
              "err": {},
              "uuid": "8ef19a12-5237-45b3-ba3d-8888a9652503",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with empty email and empty password",
              "fullTitle": "POST /LOGIN Verify Failed Login with empty email and empty password",
              "timedOut": false,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"\", password: \"\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "5ef0ac39-f2c6-49a8-8c04-1595130df485",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with valid email and empty password",
              "fullTitle": "POST /LOGIN Verify Failed Login with valid email and empty password",
              "timedOut": false,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "a60446fb-a672-4202-a3cd-f26ae4383e67",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with SQLI in password",
              "fullTitle": "POST /LOGIN Verify Failed Login with SQLI in password",
              "timedOut": false,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", \n          password: \"SELECT%count%(*)%FROM%Users%WHERE%Username='jebol'%or%1=1%--%'%AND%Password=%'email'\"});\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.message).to.eql(\"Tidak boleh mengandung symbol\");\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "a6012eef-af82-4fa2-9cab-db51ef60f461",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with SQLI in email",
              "fullTitle": "POST /LOGIN Verify Failed Login with SQLI in email",
              "timedOut": false,
              "duration": 530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"SELECT%count%(*)%FROM%Users%WHERE%Username='jebol'%or%1=1%--%'%AND%Password=%'email'\", \n          password: \"QaGabut100persen\"});\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.message).to.eql(\"Cek kembali email anda\");\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "e922bf99-0818-4ab7-9f13-e15c95304416",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Max Char in Email Field",
              "fullTitle": "POST /LOGIN Verify Failed Login with Max Char in Email Field",
              "timedOut": false,
              "duration": 516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let max_email = Array.from(Array(55), () => Math.floor(Math.random() * 36).toString(36)).join('');\nconst response = await request_url\n.post(\"/login\") \n.send({ email: max_email + \"@gmail.com\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.data).to.eql('Email/Password melebihin maksimal karakter');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "3d5898f2-6cbf-4e4b-9fcc-749a45457382",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Max Char in Password Field",
              "fullTitle": "POST /LOGIN Verify Failed Login with Max Char in Password Field",
              "timedOut": false,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let max_password = Array.from(Array(55), () => Math.floor(Math.random() * 36).toString(36)).join('');\nconst response = await request_url\n.post(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: max_password });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.data).to.eql('Email/Password melebihin maksimal karakter');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "d8ef58e5-b756-477d-aad1-4703771d378a",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Method GET",
              "fullTitle": "POST /LOGIN Verify Failed Login with Method GET",
              "timedOut": false,
              "duration": 1423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url\n.get(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(405);",
              "err": {},
              "uuid": "39b680ee-bc74-47ec-a3c7-fb36f140d63a",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Method PUT",
              "fullTitle": "POST /LOGIN Verify Failed Login with Method PUT",
              "timedOut": false,
              "duration": 1004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n.put(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(405);",
              "err": {},
              "uuid": "9986b01f-327b-422a-a045-e38242fc9df5",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Method PATCH",
              "fullTitle": "POST /LOGIN Verify Failed Login with Method PATCH",
              "timedOut": false,
              "duration": 638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n.patch(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(405);",
              "err": {},
              "uuid": "d60a3b34-4199-4931-949e-19f345c09405",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Form-Data as Body",
              "fullTitle": "POST /LOGIN Verify Failed Login with Form-Data as Body",
              "timedOut": false,
              "duration": 625,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .type('form')\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "6b01ba21-deee-48b9-95be-d68545a2d963",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with xx-www-form-urlencoded as Body",
              "fullTitle": "POST /LOGIN Verify Failed Login with xx-www-form-urlencoded as Body",
              "timedOut": false,
              "duration": 638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .set('content-Type', 'application/x-www-form-urlencoded')\n  .send({ email: 'shidqi.ngetes@gmail.com', password: 'QaGabut100persen' });\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "7be5c5c4-543a-42a8-bc3b-b7d6e759f799",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Integer Type in Email",
              "fullTitle": "POST /LOGIN Verify Failed Login with Integer Type in Email",
              "timedOut": false,
              "duration": 658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .send({ email: 123456789, password: random_text});\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "45c4d836-9bf7-4d4b-8625-7d4f35549373",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Integer Type in Password",
              "fullTitle": "POST /LOGIN Verify Failed Login with Integer Type in Password",
              "timedOut": false,
              "duration": 562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .send({ email: random_text + \"@gmail.com\", password: 123456789});\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "0f1c5ce4-8a31-48a3-b287-acf8bb9cd473",
              "parentUUID": "84b9b0c9-f010-49cd-a6ca-7497f4290b12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "907e90f1-ebb2-4b6c-b7be-5251ad906f17",
              "title": "Verify Max Login for User in 1 IP Address",
              "fullFile": "C:\\Test QA\\api-automation-testing-using-mocha-chai-javascript\\automation-api-login.js",
              "file": "\\automation-api-login.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Tes ke 0 Failed Login Max in 1 Session",
                  "fullTitle": "POST /LOGIN Verify Max Login for User in 1 IP Address Tes ke 0 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 543,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "ed581393-1e50-4b67-bb52-89e520f7ce49",
                  "parentUUID": "907e90f1-ebb2-4b6c-b7be-5251ad906f17",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 1 Failed Login Max in 1 Session",
                  "fullTitle": "POST /LOGIN Verify Max Login for User in 1 IP Address Tes ke 1 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 1120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "2707306c-923e-4c3f-bca4-109d601fdd2b",
                  "parentUUID": "907e90f1-ebb2-4b6c-b7be-5251ad906f17",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 2 Failed Login Max in 1 Session",
                  "fullTitle": "POST /LOGIN Verify Max Login for User in 1 IP Address Tes ke 2 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 496,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "e3340722-ecdc-4b6b-885d-494cac16f3ff",
                  "parentUUID": "907e90f1-ebb2-4b6c-b7be-5251ad906f17",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 3 Failed Login Max in 1 Session",
                  "fullTitle": "POST /LOGIN Verify Max Login for User in 1 IP Address Tes ke 3 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 505,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "ad707f20-de25-4f8c-bca4-716f023bf3a8",
                  "parentUUID": "907e90f1-ebb2-4b6c-b7be-5251ad906f17",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 4 Failed Login Max in 1 Session",
                  "fullTitle": "POST /LOGIN Verify Max Login for User in 1 IP Address Tes ke 4 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 521,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "4b5ae888-5a8e-4a35-8d4a-20fcf43d56be",
                  "parentUUID": "907e90f1-ebb2-4b6c-b7be-5251ad906f17",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed581393-1e50-4b67-bb52-89e520f7ce49",
                "2707306c-923e-4c3f-bca4-109d601fdd2b",
                "e3340722-ecdc-4b6b-885d-494cac16f3ff",
                "ad707f20-de25-4f8c-bca4-716f023bf3a8",
                "4b5ae888-5a8e-4a35-8d4a-20fcf43d56be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3185,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a245dc17-d441-4a50-a0e6-a1675a7974ce",
            "f3f62918-965a-437a-adee-bb9c5bc824c5",
            "9d7e9327-d718-4ded-8cc2-15bc34dc08b8",
            "94e90cb8-6ba0-4d50-b680-8370a09f1fb5",
            "b4b741f4-2f27-4bfa-b145-5394abba5ec6",
            "a6cf10ac-865f-41ff-b060-4f9971b280b2",
            "8ef19a12-5237-45b3-ba3d-8888a9652503",
            "5ef0ac39-f2c6-49a8-8c04-1595130df485",
            "a60446fb-a672-4202-a3cd-f26ae4383e67",
            "a6012eef-af82-4fa2-9cab-db51ef60f461",
            "e922bf99-0818-4ab7-9f13-e15c95304416",
            "3d5898f2-6cbf-4e4b-9fcc-749a45457382",
            "d8ef58e5-b756-477d-aad1-4703771d378a",
            "39b680ee-bc74-47ec-a3c7-fb36f140d63a",
            "9986b01f-327b-422a-a045-e38242fc9df5",
            "d60a3b34-4199-4931-949e-19f345c09405",
            "6b01ba21-deee-48b9-95be-d68545a2d963",
            "7be5c5c4-543a-42a8-bc3b-b7d6e759f799",
            "45c4d836-9bf7-4d4b-8625-7d4f35549373",
            "0f1c5ce4-8a31-48a3-b287-acf8bb9cd473"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "api-login-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "Login",
        "reportFilename": "api-login-report"
      },
      "version": "6.2.0"
    }
  }
}